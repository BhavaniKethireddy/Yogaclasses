const http = require('http');
const fs = require('fs');

const server = http.createServer((req, res) => {
  if (req.method === 'POST' && req.url === '/api/enroll') {
    handleEnrollRequest(req, res);
  } else {
    // Serve static HTML file
    fs.readFile('index.html', 'utf8', (err, data) => {
      if (err) {
        res.writeHead(500, { 'Content-Type': 'text/plain' });
        res.end('Internal Server Error');
        return;
      }
      res.writeHead(200, { 'Content-Type': 'text/html' });
      res.end(data);
    });
  }
});

const handleEnrollRequest = (req, res) => {
  let body = '';
  req.on('data', (chunk) => {
    body += chunk;
  });

  req.on('end', () => {
    try {
      const { name, age, selectedBatch } = JSON.parse(body);

      // Basic server-side validation
      if (!name || !age || !selectedBatch) {
        res.writeHead(400, { 'Content-Type': 'application/json' });
        res.end(JSON.stringify({ success: false, message: 'Invalid data' }));
        return;
      }

      // Mock database storage (replace this with actual database code)
      // ...

      res.writeHead(200, { 'Content-Type': 'application/json' });
      res.end(JSON.stringify({ success: true, message: 'Enrollment successful' }));
    } catch (error) {
      console.error(error);
      res.writeHead(500, { 'Content-Type': 'application/json' });
      res.end(JSON.stringify({ success: false, message: 'Internal server error' }));
    }
  });
};

const PORT = process.env.PORT || 3001;

server.listen(PORT, () => {
  console.log('Server is running on http://localhost:${PORT}');
});